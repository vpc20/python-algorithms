import unittest
from random import randrange


def quicksort(arr):
    if len(arr) < 2:
        return arr
    part_idx = partition(arr)
    return quicksort(arr[:part_idx]) + quicksort(arr[part_idx:])


def partition(arr):
    pivot = arr[0]
    part_idx = 0
    for i in range(1, len(arr)):
        if arr[i] < pivot:
            part_idx += 1
            arr[i], arr[part_idx] = arr[part_idx], arr[i]
    arr[0], arr[part_idx] = arr[part_idx], arr[0]
    return part_idx if arr.index(pivot) != 0 else 1


def random_int_array(max_arr_size, max_int):
    return [randrange(max_int + 1) for i in range(randrange(max_arr_size + 1))]


class MyTestCase(unittest.TestCase):
    def test_something(self):
        self.assertEqual(quicksort([]), [])

        self.assertEqual(quicksort([1]), [1])
        self.assertEqual(quicksort([1, 2]), [1, 2])
        self.assertEqual(quicksort([2, 1]), [1, 2])

        self.assertEqual(quicksort([1, 2, 3]), [1, 2, 3])
        self.assertEqual(quicksort([1, 3, 2]), [1, 2, 3])
        self.assertEqual(quicksort([2, 1, 3]), [1, 2, 3])
        self.assertEqual(quicksort([2, 3, 1]), [1, 2, 3])
        self.assertEqual(quicksort([3, 1, 2]), [1, 2, 3])
        self.assertEqual(quicksort([3, 2, 1]), [1, 2, 3])

        self.assertEqual(quicksort([1, 2, 3, 4]), [1, 2, 3, 4])
        self.assertEqual(quicksort([1, 2, 4, 3]), [1, 2, 3, 4])
        self.assertEqual(quicksort([1, 3, 2, 4]), [1, 2, 3, 4])
        self.assertEqual(quicksort([1, 3, 4, 2]), [1, 2, 3, 4])
        self.assertEqual(quicksort([1, 4, 2, 3]), [1, 2, 3, 4])
        self.assertEqual(quicksort([1, 4, 3, 2]), [1, 2, 3, 4])
        self.assertEqual(quicksort([2, 1, 3, 4]), [1, 2, 3, 4])
        self.assertEqual(quicksort([2, 1, 4, 3]), [1, 2, 3, 4])
        self.assertEqual(quicksort([2, 3, 1, 4]), [1, 2, 3, 4])
        self.assertEqual(quicksort([2, 3, 4, 1]), [1, 2, 3, 4])
        self.assertEqual(quicksort([2, 4, 1, 3]), [1, 2, 3, 4])
        self.assertEqual(quicksort([2, 4, 3, 1]), [1, 2, 3, 4])
        self.assertEqual(quicksort([3, 1, 2, 4]), [1, 2, 3, 4])
        self.assertEqual(quicksort([3, 1, 4, 2]), [1, 2, 3, 4])
        self.assertEqual(quicksort([3, 2, 1, 4]), [1, 2, 3, 4])
        self.assertEqual(quicksort([3, 2, 4, 1]), [1, 2, 3, 4])
        self.assertEqual(quicksort([3, 4, 1, 2]), [1, 2, 3, 4])
        self.assertEqual(quicksort([3, 4, 2, 1]), [1, 2, 3, 4])
        self.assertEqual(quicksort([4, 1, 2, 3]), [1, 2, 3, 4])
        self.assertEqual(quicksort([4, 1, 3, 2]), [1, 2, 3, 4])
        self.assertEqual(quicksort([4, 2, 1, 3]), [1, 2, 3, 4])
        self.assertEqual(quicksort([4, 2, 3, 1]), [1, 2, 3, 4])
        self.assertEqual(quicksort([4, 3, 1, 2]), [1, 2, 3, 4])
        self.assertEqual(quicksort([4, 3, 2, 1]), [1, 2, 3, 4])

        self.assertEqual(quicksort([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 2, 3, 5, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 2, 4, 3, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 2, 4, 5, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 2, 5, 3, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 2, 5, 4, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 3, 2, 4, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 3, 2, 5, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 3, 4, 2, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 3, 4, 5, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 3, 5, 2, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 3, 5, 4, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 4, 2, 3, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 4, 2, 5, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 4, 3, 2, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 4, 3, 5, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 4, 5, 2, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 4, 5, 3, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 5, 2, 3, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 5, 2, 4, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 5, 3, 2, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 5, 3, 4, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 5, 4, 2, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([1, 5, 4, 3, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 1, 3, 4, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 1, 3, 5, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 1, 4, 3, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 1, 4, 5, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 1, 5, 3, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 1, 5, 4, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 3, 1, 4, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 3, 1, 5, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 3, 4, 1, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 3, 4, 5, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 3, 5, 1, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 3, 5, 4, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 4, 1, 3, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 4, 1, 5, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 4, 3, 1, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 4, 3, 5, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 4, 5, 1, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 4, 5, 3, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 5, 1, 3, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 5, 1, 4, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 5, 3, 1, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 5, 3, 4, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 5, 4, 1, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([2, 5, 4, 3, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 1, 2, 4, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 1, 2, 5, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 1, 4, 2, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 1, 4, 5, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 1, 5, 2, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 1, 5, 4, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 2, 1, 4, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 2, 1, 5, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 2, 4, 1, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 2, 4, 5, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 2, 5, 1, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 2, 5, 4, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 4, 1, 2, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 4, 1, 5, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 4, 2, 1, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 4, 2, 5, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 4, 5, 1, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 4, 5, 2, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 5, 1, 2, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 5, 1, 4, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 5, 2, 1, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 5, 2, 4, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 5, 4, 1, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([3, 5, 4, 2, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 1, 2, 3, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 1, 2, 5, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 1, 3, 2, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 1, 3, 5, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 1, 5, 2, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 1, 5, 3, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 2, 1, 3, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 2, 1, 5, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 2, 3, 1, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 2, 3, 5, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 2, 5, 1, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 2, 5, 3, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 3, 1, 2, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 3, 1, 5, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 3, 2, 1, 5]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 3, 2, 5, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 3, 5, 1, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 3, 5, 2, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 5, 1, 2, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 5, 1, 3, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 5, 2, 1, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 5, 2, 3, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 5, 3, 1, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([4, 5, 3, 2, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 1, 2, 3, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 1, 2, 4, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 1, 3, 2, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 1, 3, 4, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 1, 4, 2, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 1, 4, 3, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 2, 1, 3, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 2, 1, 4, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 2, 3, 1, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 2, 3, 4, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 2, 4, 1, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 2, 4, 3, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 3, 1, 2, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 3, 1, 4, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 3, 2, 1, 4]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 3, 2, 4, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 3, 4, 1, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 3, 4, 2, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 4, 1, 2, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 4, 1, 3, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 4, 2, 1, 3]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 4, 2, 3, 1]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 4, 3, 1, 2]), [1, 2, 3, 4, 5])
        self.assertEqual(quicksort([5, 4, 3, 2, 1]), [1, 2, 3, 4, 5])

        for _ in range(10000):
            a1 = random_int_array(25, 1000)
            print(a1)
            self.assertEqual(quicksort(a1), sorted(a1))


if __name__ == '__main__':
    unittest.main()

# arr1 = [3, 4, 6, 1, 2, 5]
# print quicksort(arr1)
